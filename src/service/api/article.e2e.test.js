'use strict';

const express = require(`express`);
const request = require(`supertest`);
const {HttpCode} = require(`../../constants`);

const article = require(`./article`);
const ArticleService = require(`../data-service/article`);
const CommentService = require(`../data-service/comment`);

const mockData = [
  {
    "id": `2rpNo8`,
    "title": `Обзор новейшего смартфона`,
    "announce": `Бонусом отдам все аксессуары. Продаю с болью в сердце... Простые ежедневные упражнения помогут достичь успеха. Помните, небольшое количество ежедневных упражнений лучше, чем один раз, но много.`,
    "fullText": `Продаю с болью в сердце... Даю недельную гарантию. Это настоящая находка для коллекционера! Если найдёте дешевле — сброшу цену. Таких предложений больше нет! Первая большая ёлка была установлена только в 1938 году. Освоить вёрстку несложно. Возьмите книгу новую книгу и закрепите все упражнения на практике. Этот смартфон — настоящая находка. Большой и яркий экран, мощнейший процессор — всё это в небольшом гаджете. Помните, небольшое количество ежедневных упражнений лучше, чем один раз, но много. При покупке с меня бесплатная доставка в черте города. Альбом стал настоящим открытием года. Мощные гитарные рифы и скоростные соло-партии не дадут заскучать. Золотое сечение — соотношение двух величин, гармоническая пропорция. Это один из лучших рок-музыкантов. Вы можете достичь всего. Стоит только немного постараться и запастись книгами. Бороться с прокрастинацией несложно. Просто действуйте. Маленькими шагами. Товар в отличном состоянии. Если товар не понравится — верну всё до последней копейки. Игры и программирование разные вещи. Не стоит идти в программисты, если вам нравятся только игры. Программировать не настолько сложно, как об этом говорят. Не пытайтесь торговаться. Цену вещам я знаю.`,
    "createdDate": `6/1/2021, 3:19:09 AM`,
    "category": [
      `Железо`,
      `Животные`,
      `Журналы`,
      `Музыка`,
      `Книги`,
      `Программирование`,
      `IT`
    ],
    "comments": [
      {
        "id": `o7LXCv`,
        "text": `Согласен с автором! Мне не нравится ваш стиль. Ощущение что вы меня поучаете.`
      },
      {
        "id": `xAYUQw`,
        "text": `Совсем немного... Мне кажется или я уже читал это где-то? Мне не нравится ваш стиль. Ощущение что вы меня поучаете.`
      },
      {
        "id": `kF8aqt`,
        "text": `Мне кажется или я уже читал это где-то? Планируете записать видосик на эту тему?`
      }
    ]
  },
  {
    "id": `DueLYK`,
    "title": `Что такое золотое сечение`,
    "announce": `Даю недельную гарантию. Программировать не настолько сложно, как об этом говорят. Пользовались бережно и только по большим праздникам. Если товар не понравится — верну всё до последней копейки. Достичь успеха помогут ежедневные повторения.`,
    "fullText": `Альбом стал настоящим открытием года. Мощные гитарные рифы и скоростные соло-партии не дадут заскучать. Бонусом отдам все аксессуары. Процессор заслуживает особого внимания. Он обязательно понравится геймерам со стажем. Если найдёте дешевле — сброшу цену. Из под его пера вышло 8 платиновых альбомов. Помните, небольшое количество ежедневных упражнений лучше, чем один раз, но много. Пользовались бережно и только по большим праздникам. Ёлки — это не просто красивое дерево. Это прочная древесина. Кому нужен этот новый телефон, если тут такое... Мой дед не мог её сломать. Это настоящая находка для коллекционера! Первая большая ёлка была установлена только в 1938 году. Кажется, что это хрупкая вещь. Достичь успеха помогут ежедневные повторения. Товар в отличном состоянии. Продаю с болью в сердце... Программировать не настолько сложно, как об этом говорят. Он написал больше 30 хитов. Даю недельную гарантию. Игры и программирование разные вещи. Не стоит идти в программисты, если вам нравятся только игры. Таких предложений больше нет! Собрать камни бесконечности легко, если вы прирожденный герой.`,
    "createdDate": `6/28/2021, 11:21:31 PM`,
    "category": [
      `Музыка`,
      `Посуда`,
      `Программирование`,
      `Кино`,
      `Животные`,
      `Железо`,
      `Разное`,
      `Журналы`
    ],
    "comments": [
      {
        "id": `jYhxtY`,
        "text": `Мне не нравится ваш стиль. Ощущение что вы меня поучаете. Мне кажется или я уже читал это где-то? Согласен с автором!`
      }
    ]
  },
  {
    "id": `4g6-Sn`,
    "title": `Ёлки. История деревьев`,
    "announce": `При покупке с меня бесплатная доставка в черте города. Это один из лучших рок-музыкантов.`,
    "fullText": `Собрать камни бесконечности легко, если вы прирожденный герой. Кажется, что это хрупкая вещь. Альбом стал настоящим открытием года. Мощные гитарные рифы и скоростные соло-партии не дадут заскучать. Если товар не понравится — верну всё до последней копейки. Помните, небольшое количество ежедневных упражнений лучше, чем один раз, но много. Товар в отличном состоянии. Освоить вёрстку несложно. Возьмите книгу новую книгу и закрепите все упражнения на практике. Даю недельную гарантию. Рок-музыка всегда ассоциировалась с протестами. Так ли это на самом деле? Программировать не настолько сложно, как об этом говорят. Это настоящая находка для коллекционера! Процессор заслуживает особого внимания. Он обязательно понравится геймерам со стажем. Простые ежедневные упражнения помогут достичь успеха. Это один из лучших рок-музыкантов. Вы можете достичь всего. Стоит только немного постараться и запастись книгами. Пользовались бережно и только по большим праздникам.`,
    "createdDate": `5/25/2021, 2:58:26 AM`,
    "category": [
      `Книги`,
      `Программирование`,
      `За жизнь`,
      `Деревья`,
      `Музыка`,
      `Животные`,
      `Журналы`,
      `IT`
    ],
    "comments": [
      {
        "id": `Wf2-Y-`,
        "text": `Мне кажется или я уже читал это где-то? Планируете записать видосик на эту тему?`
      }
    ]
  },
  {
    "id": `q1ki5Z`,
    "title": `Где встретить 8-е марта`,
    "announce": `Если товар не понравится — верну всё до последней копейки. Первая большая ёлка была установлена только в 1938 году.`,
    "fullText": `Мой дед не мог её сломать. Это один из лучших рок-музыкантов. Первая большая ёлка была установлена только в 1938 году. Рок-музыка всегда ассоциировалась с протестами. Так ли это на самом деле? Игры и программирование разные вещи. Не стоит идти в программисты, если вам нравятся только игры. Пользовались бережно и только по большим праздникам. Кажется, что это хрупкая вещь. Не пытайтесь торговаться. Цену вещам я знаю. Это настоящая находка для коллекционера! Освоить вёрстку несложно. Возьмите книгу новую книгу и закрепите все упражнения на практике. Продаю с болью в сердце... Программировать не настолько сложно, как об этом говорят. Две страницы заляпаны свежим кофе. Альбом стал настоящим открытием года. Мощные гитарные рифы и скоростные соло-партии не дадут заскучать. Достичь успеха помогут ежедневные повторения. Кому нужен этот новый телефон, если тут такое... Ёлки — это не просто красивое дерево. Это прочная древесина. Простые ежедневные упражнения помогут достичь успеха. Он написал больше 30 хитов. Помните, небольшое количество ежедневных упражнений лучше, чем один раз, но много. Если найдёте дешевле — сброшу цену. Процессор заслуживает особого внимания. Он обязательно понравится геймерам со стажем. Этот смартфон — настоящая находка. Большой и яркий экран, мощнейший процессор — всё это в небольшом гаджете.`,
    "createdDate": `6/16/2021, 2:10:46 PM`,
    "category": [
      `IT`,
      `Железо`,
      `Разное`,
      `Животные`,
      `Без рамки`,
      `Посуда`,
      `Деревья`
    ],
    "comments": [
      {
        "id": `lf93_j`,
        "text": `Это где ж такие красоты?`
      },
      {
        "id": `johoub`,
        "text": `Согласен с автором!`
      },
      {
        "id": `IRC-nz`,
        "text": `Совсем немного...`
      }
    ]
  },
  {
    "id": `nLyGM0`,
    "title": `Как перестать беспокоиться и начать жить`,
    "announce": `Игры и программирование разные вещи. Не стоит идти в программисты, если вам нравятся только игры. Ёлки — это не просто красивое дерево. Это прочная древесина. Это один из лучших рок-музыкантов. Таких предложений больше нет! Как начать действовать? Для начала просто соберитесь. Рок-музыка всегда ассоциировалась с протестами. Так ли это на самом деле?`,
    "fullText": `Золотое сечение — соотношение двух величин, гармоническая пропорция. Альбом стал настоящим открытием года. Мощные гитарные рифы и скоростные соло-партии не дадут заскучать. Если найдёте дешевле — сброшу цену. Этот смартфон — настоящая находка. Большой и яркий экран, мощнейший процессор — всё это в небольшом гаджете. Даю недельную гарантию. Он написал больше 30 хитов. Рок-музыка всегда ассоциировалась с протестами. Так ли это на самом деле? Кому нужен этот новый телефон, если тут такое... Бонусом отдам все аксессуары. Если товар не понравится — верну всё до последней копейки. Таких предложений больше нет! Как начать действовать? Для начала просто соберитесь.`,
    "createdDate": `6/13/2021, 6:22:15 PM`,
    "category": [
      `Кино`,
      `Программирование`,
      `Железо`,
      `Музыка`,
      `Книги`,
      `Разное`,
      `За жизнь`,
      `Деревья`
    ],
    "comments": [
      {
        "id": `F6M7Ag`,
        "text": `Хочу такую же футболку :-) Совсем немного... Мне кажется или я уже читал это где-то?`
      },
      {
        "id": `gBMSGK`,
        "text": `Плюсую но слишком много буквы! Давно не пользуюсь стационарными компьютерами. Ноутбуки победили.`
      }
    ]
  }
];

const createAPI = () => {
  const app = express();
  const cloneData = JSON.parse(JSON.stringify(mockData));
  app.use(express.json());
  article(app, new ArticleService(cloneData), new CommentService());
  return app;
};


describe(`API returns a list of all articles`, () => {

  const app = createAPI();

  let response;

  beforeAll(async () => {
    response = await request(app)
      .get(`/articles`);
  });

  test(`Status code 200`, () => expect(response.statusCode).toBe(HttpCode.OK));

  test(`Returns a list of 5 articles`, () => expect(response.body.length).toBe(5));

  test(`First article's id equals "2rpNo8"`, () => expect(response.body[0].id).toBe(`2rpNo8`));

});

describe(`API returns an article with given id`, () => {

  const app = createAPI();

  let response;

  beforeAll(async () => {
    response = await request(app)
      .get(`/articles/2rpNo8`);
  });

  test(`Status code 200`, () => expect(response.statusCode).toBe(HttpCode.OK));

  test(`Article's title is "Обзор новейшего смартфона"`, () => expect(response.body.title).toBe(`Обзор новейшего смартфона`));

});


describe(`API refuses to create an article if data is invalid`, () => {

  const newArticle = {
    category: [`Игры`],
    title: `Дам погладить котика`,
    announce: `Дам погладить котика. Дорого. Не гербалайф`,
    fullText: `Если товар не понравится — верну всё до последней копейки.`,
    createdDate: `7/3/2021, 3:15:07 AM`
  };
  const app = createAPI();

  test(`Without any required property response code is 400`, async () => {
    for (const key of Object.keys(newArticle)) {
      const badArticle = {...newArticle};
      delete badArticle[key];
      await request(app)
        .post(`/articles`)
        .send(badArticle)
        .expect(HttpCode.BAD_REQUEST);
    }
  });
});

describe(`API changes existent article`, () => {

  const newArticle = {
    category: [`Игры`],
    title: `Дам погладить котика`,
    announce: `Дам погладить котика. Дорого. Не гербалайф`,
    fullText: `Если товар не понравится — верну всё до последней копейки.`,
    createdDate: `7/3/2021, 3:15:07 AM`
  };
  const app = createAPI();
  let response;

  beforeAll(async () => {
    response = await request(app)
      .put(`/articles/2rpNo8`)
      .send(newArticle);
  });

  test(`Status code 200`, () => expect(response.statusCode).toBe(HttpCode.OK));

  test(`Returns changed article`, () => expect(response.body).toEqual(expect.objectContaining(newArticle)));

  test(`Article is really changed`, () => request(app)
    .get(`/articles/2rpNo8`)
    .expect((res) => expect(res.body.title).toBe(`Дам погладить котика`))
  );
});

test(`API returns status code 404 when trying to change non-existent article`, () => {

  const app = createAPI();

  const validArticle = {
    category: [`Игры`],
    title: `Дам погладить котика`,
    announce: `Дам погладить котика. Дорого. Не гербалайф`,
    fullText: `Если товар не понравится — верну всё до последней копейки.`,
    createdDate: `7/3/2021, 3:15:07 AM`
  };

  return request(app)
    .put(`/articles/NOEXST`)
    .send(validArticle)
    .expect(HttpCode.NOT_FOUND);
});

test(`API returns status code 400 when trying to change an article with invalid data`, () => {

  const app = createAPI();

  const invalidArticle = {
    category: [`Игры`],
    title: `Дам погладить котика`,
    announce: `Дам погладить котика. Дорого. Не гербалайф`,
    fullText: `Если товар не понравится — верну всё до последней копейки.`,
  };

  return request(app)
    .put(`/articles/NOEXST`)
    .send(invalidArticle)
    .expect(HttpCode.BAD_REQUEST);
});

describe(`API creates an article if data is valid`, () => {
  const newArticle = {
    category: [`Игры`],
    title: `Дам погладить котика 11`,
    announce: `Дам погладить котика. Дорого. Не гербалайф`,
    fullText: `Если товар не понравится — верну всё до последней копейки.`,
    createdDate: `7/3/2021, 3:15:07 AM`,
  };

  let app;
  let response;

  beforeAll(async () => {
    app = createAPI();
    response = await request(app)
      .post(`/articles`)
      .send(newArticle);
  });

  test(`Status code 201`, () => expect(response.statusCode).toBe(HttpCode.CREATED));

  test(`Returns article created`, () => expect(response.body).toEqual(expect.objectContaining(newArticle)));

  test(`articles count is changed`, () => request(app)
    .get(`/articles`)
    .expect((res) => expect(res.body.length).toBe(6))
  );
});

describe(`API correctly deletes an article`, () => {
  let app;
  let response;

  beforeAll(async () => {
    app = createAPI();
    response = await request(app)
      .delete(`/articles/2rpNo8`);
  });

  test(`Status code 200`, () => expect(response.statusCode).toBe(HttpCode.OK));

  test(`Returns deleted article`, () => expect(response.body.id).toBe(`2rpNo8`));

  test(`Article count is 4 now`, () => request(app)
    .get(`/articles`)
    .expect((res) => expect(res.body.length).toBe(4))
  );

});

test(`API refuses to delete non-existent article`, () => {
  const app = createAPI();
  return request(app)
    .delete(`/articles/NOEXST`)
    .expect(HttpCode.NOT_FOUND);
});

test(`API refuses to create a comment to non-existent offer and returns status code 404`, () => {

  const app = createAPI();

  return request(app)
    .post(`/articles/NOEXST/comments`)
    .send({
      text: `Неважно`
    })
    .expect(HttpCode.NOT_FOUND);

});

test(`API refuses to delete non-existent comment`, () => {

  const app = createAPI();

  return request(app)
    .delete(`/articles/2rpNo8/comments/NOEXST`)
    .expect(HttpCode.NOT_FOUND);

});
